{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:07:06.358990Z\",\"iopub.execute_input\":\"2022-08-22T22:07:06.360442Z\",\"iopub.status.idle\":\"2022-08-22T22:07:06.366739Z\",\"shell.execute_reply.started\":\"2022-08-22T22:07:06.360393Z\",\"shell.execute_reply\":\"2022-08-22T22:07:06.365645Z\"}}\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:07:06.705673Z\",\"iopub.execute_input\":\"2022-08-22T22:07:06.706622Z\",\"iopub.status.idle\":\"2022-08-22T22:07:06.721285Z\",\"shell.execute_reply.started\":\"2022-08-22T22:07:06.706578Z\",\"shell.execute_reply\":\"2022-08-22T22:07:06.720330Z\"}}\ndata = pd.read_csv('../input/acmehappinesssurvey2020/ACME-HappinessSurvey2020.csv')\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:07:08.227128Z\",\"iopub.execute_input\":\"2022-08-22T22:07:08.228242Z\",\"iopub.status.idle\":\"2022-08-22T22:07:08.241466Z\",\"shell.execute_reply.started\":\"2022-08-22T22:07:08.228203Z\",\"shell.execute_reply\":\"2022-08-22T22:07:08.240213Z\"}}\ndata.head()\n\n# %% [markdown]\n# Data Description:\n# \n# Y = target attribute (Y) with values indicating 0 (unhappy) and 1 (happy) customers\n# \n# X1 = my order was delivered on time\n# \n# X2 = contents of my order was as I expected\n# \n# X3 = I ordered everything I wanted to order\n# \n# X4 = I paid a good price for my order\n# \n# X5 = I am satisfied with my courier\n# \n# X6 = the app makes ordering easy for me\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:07:09.931995Z\",\"iopub.execute_input\":\"2022-08-22T22:07:09.932414Z\",\"iopub.status.idle\":\"2022-08-22T22:07:09.946907Z\",\"shell.execute_reply.started\":\"2022-08-22T22:07:09.932380Z\",\"shell.execute_reply\":\"2022-08-22T22:07:09.945802Z\"}}\n# Check for information contained in dataset\ndata.info()\n\n# %% [markdown]\n# You can see that we have a very small dataset and it easier to see that we don't have any missing values. But we can confirm that by running the below: \n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:07:10.550628Z\",\"iopub.execute_input\":\"2022-08-22T22:07:10.551313Z\",\"iopub.status.idle\":\"2022-08-22T22:07:10.560877Z\",\"shell.execute_reply.started\":\"2022-08-22T22:07:10.551279Z\",\"shell.execute_reply\":\"2022-08-22T22:07:10.559896Z\"}}\ndata.isnull().sum()\n\n# %% [markdown]\n# We can see that all the features have no missing entries. \n# \n# Please also remember that all our features contain ordinal categorical data so doing the statistical check is not necesary, and we can change the data types to string.\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:07:57.096557Z\",\"iopub.execute_input\":\"2022-08-22T22:07:57.097472Z\",\"iopub.status.idle\":\"2022-08-22T22:07:57.363740Z\",\"shell.execute_reply.started\":\"2022-08-22T22:07:57.097436Z\",\"shell.execute_reply\":\"2022-08-22T22:07:57.362692Z\"}}\n# Ordered everything the customer wanted vs The app makes ordering easy for them\nsns.countplot(x=\"X3\", hue=\"X6\", data=data);\n\n# %% [markdown]\n# For those individuals who ordered the least amount of items than what they wanted to order, only 2 found the app extremely difficult to use, and more found the app easy to use.\n# So maybe they didn't order much because there was no stock for the items they wanted to order, or it was above their budget, or the pictures weren't clear enough for them to buy etc. It could be a number of reasons.\n# \n\n# %% [markdown]\n# Not many individuals who ordered everthing they wanted to order found the app easy to use. \n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:08:02.160835Z\",\"iopub.execute_input\":\"2022-08-22T22:08:02.161270Z\",\"iopub.status.idle\":\"2022-08-22T22:08:02.429344Z\",\"shell.execute_reply.started\":\"2022-08-22T22:08:02.161236Z\",\"shell.execute_reply\":\"2022-08-22T22:08:02.428262Z\"}}\nsns.countplot(x=\"X1\", hue=\"X2\", data=data);\n\n# %% [markdown]\n# You can see from the graph above that the customer whose order took the longest to arrive also had contents not as the customer expected. \n# And most of the orders that were delivered the fastest also had contents not as the customers expected. \n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:08:03.924842Z\",\"iopub.execute_input\":\"2022-08-22T22:08:03.926012Z\",\"iopub.status.idle\":\"2022-08-22T22:08:04.107707Z\",\"shell.execute_reply.started\":\"2022-08-22T22:08:03.925963Z\",\"shell.execute_reply\":\"2022-08-22T22:08:04.106745Z\"}}\nsns.countplot(x=\"X5\", data=data);\n\n# %% [markdown]\n# The most customers are indeed satisfied with their courier.\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:08:05.579909Z\",\"iopub.execute_input\":\"2022-08-22T22:08:05.581109Z\",\"iopub.status.idle\":\"2022-08-22T22:08:05.757100Z\",\"shell.execute_reply.started\":\"2022-08-22T22:08:05.581063Z\",\"shell.execute_reply\":\"2022-08-22T22:08:05.756261Z\"}}\nsns.countplot(x=\"X4\", data=data);\n\n# %% [markdown]\n# More customers did indeed pay a good price for their order.\n\n# %% [markdown]\n# #### Dependent And Independant Variables\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:08:07.077928Z\",\"iopub.execute_input\":\"2022-08-22T22:08:07.078495Z\",\"iopub.status.idle\":\"2022-08-22T22:08:07.083483Z\",\"shell.execute_reply.started\":\"2022-08-22T22:08:07.078464Z\",\"shell.execute_reply\":\"2022-08-22T22:08:07.082707Z\"}}\nx = data.drop('Y', axis=1)\ny = data.Y\n\n# %% [markdown]\n# #### Scaling Data To Make sure Our Features Are Within The Same Scale So Our Models Run Faster\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:09:59.148012Z\",\"iopub.execute_input\":\"2022-08-22T22:09:59.148664Z\",\"iopub.status.idle\":\"2022-08-22T22:09:59.152961Z\",\"shell.execute_reply.started\":\"2022-08-22T22:09:59.148628Z\",\"shell.execute_reply\":\"2022-08-22T22:09:59.152180Z\"}}\nfrom sklearn.preprocessing import MinMaxScaler\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:10:00.902011Z\",\"iopub.execute_input\":\"2022-08-22T22:10:00.902629Z\",\"iopub.status.idle\":\"2022-08-22T22:10:00.911258Z\",\"shell.execute_reply.started\":\"2022-08-22T22:10:00.902585Z\",\"shell.execute_reply\":\"2022-08-22T22:10:00.910239Z\"}}\nscaler = MinMaxScaler(copy=True, feature_range=(0,1))\nX = scaler.fit_transform(x)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:10:02.260765Z\",\"iopub.execute_input\":\"2022-08-22T22:10:02.261158Z\",\"iopub.status.idle\":\"2022-08-22T22:10:02.267261Z\",\"shell.execute_reply.started\":\"2022-08-22T22:10:02.261125Z\",\"shell.execute_reply\":\"2022-08-22T22:10:02.266487Z\"}}\n## Let's check the data\nprint('Independent variables: ', X[:5])\nprint('\\nDependent variables: ', y[:5])\n\n# %% [markdown]\n# #### Train And Test Data\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:10:05.423973Z\",\"iopub.execute_input\":\"2022-08-22T22:10:05.424852Z\",\"iopub.status.idle\":\"2022-08-22T22:10:05.429863Z\",\"shell.execute_reply.started\":\"2022-08-22T22:10:05.424817Z\",\"shell.execute_reply\":\"2022-08-22T22:10:05.428749Z\"}}\nfrom sklearn.model_selection import train_test_split\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T21:23:49.885379Z\",\"iopub.execute_input\":\"2022-08-22T21:23:49.885799Z\",\"iopub.status.idle\":\"2022-08-22T21:23:49.892618Z\",\"shell.execute_reply.started\":\"2022-08-22T21:23:49.885765Z\",\"shell.execute_reply\":\"2022-08-22T21:23:49.891584Z\"}}\nx_train, x_test, y_train, y_test = train_test_split(X, y, test_size=\n                                                   30, random_state=33)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T21:23:54.616069Z\",\"iopub.execute_input\":\"2022-08-22T21:23:54.617545Z\",\"iopub.status.idle\":\"2022-08-22T21:23:54.625665Z\",\"shell.execute_reply.started\":\"2022-08-22T21:23:54.617495Z\",\"shell.execute_reply\":\"2022-08-22T21:23:54.623490Z\"}}\nprint('x_train shape is ', x_train.shape)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T21:23:58.606587Z\",\"iopub.execute_input\":\"2022-08-22T21:23:58.607423Z\",\"iopub.status.idle\":\"2022-08-22T21:23:58.613630Z\",\"shell.execute_reply.started\":\"2022-08-22T21:23:58.607377Z\",\"shell.execute_reply\":\"2022-08-22T21:23:58.612613Z\"}}\nprint('y_train shape is ', y_train.shape)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T21:24:00.616723Z\",\"iopub.execute_input\":\"2022-08-22T21:24:00.617846Z\",\"iopub.status.idle\":\"2022-08-22T21:24:00.623418Z\",\"shell.execute_reply.started\":\"2022-08-22T21:24:00.617805Z\",\"shell.execute_reply\":\"2022-08-22T21:24:00.622350Z\"}}\nprint('x_test shape is ', x_test.shape)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T21:24:01.504361Z\",\"iopub.execute_input\":\"2022-08-22T21:24:01.504794Z\",\"iopub.status.idle\":\"2022-08-22T21:24:01.511313Z\",\"shell.execute_reply.started\":\"2022-08-22T21:24:01.504760Z\",\"shell.execute_reply\":\"2022-08-22T21:24:01.509935Z\"}}\nprint('y_test shape is ', y_test.shape)\n\n# %% [markdown]\n# #### Train Models\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:30:51.168110Z\",\"iopub.execute_input\":\"2022-08-22T22:30:51.169052Z\",\"iopub.status.idle\":\"2022-08-22T22:30:51.174687Z\",\"shell.execute_reply.started\":\"2022-08-22T22:30:51.169017Z\",\"shell.execute_reply\":\"2022-08-22T22:30:51.173615Z\"}}\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import LogisticRegression\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T21:24:46.816117Z\",\"iopub.execute_input\":\"2022-08-22T21:24:46.816573Z\",\"iopub.status.idle\":\"2022-08-22T21:24:46.962070Z\",\"shell.execute_reply.started\":\"2022-08-22T21:24:46.816539Z\",\"shell.execute_reply\":\"2022-08-22T21:24:46.960961Z\"}}\n# criterion='entropy'\nrandomForestClassifierModel = RandomForestClassifier(criterion='gini', n_estimators=100, max_depth=2, random_state=33)\nrandomForestClassifierModel.fit(x_train, y_train)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T21:24:49.065429Z\",\"iopub.execute_input\":\"2022-08-22T21:24:49.065851Z\",\"iopub.status.idle\":\"2022-08-22T21:24:49.087608Z\",\"shell.execute_reply.started\":\"2022-08-22T21:24:49.065819Z\",\"shell.execute_reply\":\"2022-08-22T21:24:49.086492Z\"}}\n# Calculating Details\nprint('RandomForestClassifierModel Train score is : ', randomForestClassifierModel.score(x_train, y_train))\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T21:27:03.725379Z\",\"iopub.execute_input\":\"2022-08-22T21:27:03.725937Z\",\"iopub.status.idle\":\"2022-08-22T21:27:03.746018Z\",\"shell.execute_reply.started\":\"2022-08-22T21:27:03.725901Z\",\"shell.execute_reply\":\"2022-08-22T21:27:03.744907Z\"}}\nprint('RandomForestClassifierModel Test score is : ', randomForestClassifierModel.score(x_test, y_test))\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T21:38:29.678092Z\",\"iopub.execute_input\":\"2022-08-22T21:38:29.678969Z\",\"iopub.status.idle\":\"2022-08-22T21:38:29.696909Z\",\"shell.execute_reply.started\":\"2022-08-22T21:38:29.678935Z\",\"shell.execute_reply\":\"2022-08-22T21:38:29.695482Z\"}}\ny_pred_random = randomForestClassifierModel.predict(x_test)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T21:30:47.884264Z\",\"iopub.execute_input\":\"2022-08-22T21:30:47.885034Z\",\"iopub.status.idle\":\"2022-08-22T21:30:47.895431Z\",\"shell.execute_reply.started\":\"2022-08-22T21:30:47.884989Z\",\"shell.execute_reply\":\"2022-08-22T21:30:47.894250Z\"}}\n# DecisionTreeClassifier\ndecisionTreeModel = DecisionTreeClassifier(criterion='gini', max_depth=1, random_state=33)\ndecisionTreeModel.fit(x_train, y_train)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T21:31:28.393909Z\",\"iopub.execute_input\":\"2022-08-22T21:31:28.394964Z\",\"iopub.status.idle\":\"2022-08-22T21:31:28.402569Z\",\"shell.execute_reply.started\":\"2022-08-22T21:31:28.394913Z\",\"shell.execute_reply\":\"2022-08-22T21:31:28.401766Z\"}}\nprint('DecisionTreeClassifier Train score is : ', decisionTreeModel.score(x_train, y_train))\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T21:31:57.403896Z\",\"iopub.execute_input\":\"2022-08-22T21:31:57.404784Z\",\"iopub.status.idle\":\"2022-08-22T21:31:57.410427Z\",\"shell.execute_reply.started\":\"2022-08-22T21:31:57.404749Z\",\"shell.execute_reply\":\"2022-08-22T21:31:57.409632Z\"}}\nprint('DecisionTreeClassifier Test score is : ', decisionTreeModel.score(x_test, y_test))\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T21:35:05.000988Z\",\"iopub.execute_input\":\"2022-08-22T21:35:05.001584Z\",\"iopub.status.idle\":\"2022-08-22T21:35:05.006063Z\",\"shell.execute_reply.started\":\"2022-08-22T21:35:05.001552Z\",\"shell.execute_reply\":\"2022-08-22T21:35:05.005242Z\"}}\ny_pred_decision = decisionTreeModel.predict(x_test)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:31:38.797748Z\",\"iopub.execute_input\":\"2022-08-22T22:31:38.798866Z\",\"iopub.status.idle\":\"2022-08-22T22:31:38.811544Z\",\"shell.execute_reply.started\":\"2022-08-22T22:31:38.798828Z\",\"shell.execute_reply\":\"2022-08-22T22:31:38.810619Z\"}}\n# Logistic Regression\nlogisticRegression = LogisticRegression()\nlogisticRegression.fit(x_train, y_train)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:32:14.330390Z\",\"iopub.execute_input\":\"2022-08-22T22:32:14.330832Z\",\"iopub.status.idle\":\"2022-08-22T22:32:14.336044Z\",\"shell.execute_reply.started\":\"2022-08-22T22:32:14.330798Z\",\"shell.execute_reply\":\"2022-08-22T22:32:14.334758Z\"}}\ny_pred_logistic = logisticRegression.predict(x_test)\n\n# %% [code]\n\n\n# %% [markdown]\n# #### Check Model Performance\n\n# %% [markdown]\n# Now, let us see how our 2 models performed by using **confusion matrix ***(which is a table that shows the number of records our model correctly predicted and incorrectly predicted)*, *** f1 score**  (tells us if our model was able to capture positive cases accurately), and **precision score** *(tells us the positively predicted labels that are actaully correct)*\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:32:38.005869Z\",\"iopub.execute_input\":\"2022-08-22T22:32:38.006311Z\",\"iopub.status.idle\":\"2022-08-22T22:32:38.012049Z\",\"shell.execute_reply.started\":\"2022-08-22T22:32:38.006280Z\",\"shell.execute_reply\":\"2022-08-22T22:32:38.011191Z\"}}\nfrom sklearn.metrics import f1_score\nfrom sklearn.metrics import precision_score\nfrom sklearn.metrics import plot_confusion_matrix\nfrom sklearn.metrics import accuracy_score\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T21:36:16.476818Z\",\"iopub.execute_input\":\"2022-08-22T21:36:16.477204Z\",\"iopub.status.idle\":\"2022-08-22T21:36:16.715883Z\",\"shell.execute_reply.started\":\"2022-08-22T21:36:16.477175Z\",\"shell.execute_reply\":\"2022-08-22T21:36:16.714809Z\"}}\nplot_confusion_matrix(randomForestClassifierModel, x_test, y_test)\nplt.show();\n\n# %% [code]\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T21:36:46.381042Z\",\"iopub.execute_input\":\"2022-08-22T21:36:46.381404Z\",\"iopub.status.idle\":\"2022-08-22T21:36:46.533159Z\",\"shell.execute_reply.started\":\"2022-08-22T21:36:46.381377Z\",\"shell.execute_reply\":\"2022-08-22T21:36:46.531747Z\"}}\nplot_confusion_matrix(decisionTreeModel, x_test, y_test)\nplt.show();\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T21:58:52.292813Z\",\"iopub.execute_input\":\"2022-08-22T21:58:52.293201Z\",\"iopub.status.idle\":\"2022-08-22T21:58:52.302530Z\",\"shell.execute_reply.started\":\"2022-08-22T21:58:52.293168Z\",\"shell.execute_reply\":\"2022-08-22T21:58:52.301688Z\"}}\nprecisionScore_random = precision_score(y_test, y_pred_random, average='micro')\nprint('Precision score for RandomForestClassifier is ', precisionScore_random)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T21:59:44.041978Z\",\"iopub.execute_input\":\"2022-08-22T21:59:44.042388Z\",\"iopub.status.idle\":\"2022-08-22T21:59:44.053556Z\",\"shell.execute_reply.started\":\"2022-08-22T21:59:44.042348Z\",\"shell.execute_reply\":\"2022-08-22T21:59:44.052617Z\"}}\nprecisionScore_decision = precision_score(y_test, y_pred_decision, average='micro')\nprint('Precision score for DecisionTreeClassifier is ', precisionScore_decision)\n\n# %% [markdown]\n# The precision score for random forest classifier model tells us that our model only predicted 56 percent of positive labels correctly i.e. the model was only able to classify only 56 percent of customers as being happy, the rest was icorrectly predicted. \n# From this, we can tell that this model performed poorly.\n# \n# The one for decision tree classifier tells us that this model was able to classify 73 percent of happy customers as being happy. From this, we can see that our model performed ok.\n# \n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:35:38.769540Z\",\"iopub.execute_input\":\"2022-08-22T22:35:38.769963Z\",\"iopub.status.idle\":\"2022-08-22T22:35:38.775477Z\",\"shell.execute_reply.started\":\"2022-08-22T22:35:38.769928Z\",\"shell.execute_reply\":\"2022-08-22T22:35:38.774749Z\"}}\naccuracy_logistic = accuracy_score(y_test, y_pred_logistic)\nprint('Logistic Regression Accuracy: ', accuracy_logistic)\n\n# %% [markdown]\n# You can see from the logistic accuracy measure that the logistic regression model also performed poorly because it was only able to predict 63 percent of the data correctly. \n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T21:42:27.411167Z\",\"iopub.execute_input\":\"2022-08-22T21:42:27.413409Z\",\"iopub.status.idle\":\"2022-08-22T21:42:27.422260Z\",\"shell.execute_reply.started\":\"2022-08-22T21:42:27.413374Z\",\"shell.execute_reply\":\"2022-08-22T21:42:27.421447Z\"}}\nf1Score_random = f1_score(y_test, y_pred_random, average='weighted')\nprint('F1 Score for randomForestClassifier model is ', f1Score_random)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T21:43:25.858738Z\",\"iopub.execute_input\":\"2022-08-22T21:43:25.859129Z\",\"iopub.status.idle\":\"2022-08-22T21:43:25.865845Z\",\"shell.execute_reply.started\":\"2022-08-22T21:43:25.859098Z\",\"shell.execute_reply\":\"2022-08-22T21:43:25.865082Z\"}}\nf1Score_decision = f1_score(y_test, y_pred_decision, average='weighted')\nprint('F1 Score for decisionTreeClassifier model is ', f1Score_decision)\n\n# %% [markdown]\n# ### Apply Feature Selection\n\n# %% [markdown]\n# * Chi-Squared Statistic\n# * Mutual Information Statistic\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:15:48.518057Z\",\"iopub.execute_input\":\"2022-08-22T22:15:48.518482Z\",\"iopub.status.idle\":\"2022-08-22T22:15:48.533354Z\",\"shell.execute_reply.started\":\"2022-08-22T22:15:48.518446Z\",\"shell.execute_reply\":\"2022-08-22T22:15:48.532472Z\"}}\nfrom sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:18:29.521757Z\",\"iopub.execute_input\":\"2022-08-22T22:18:29.522624Z\",\"iopub.status.idle\":\"2022-08-22T22:18:29.532555Z\",\"shell.execute_reply.started\":\"2022-08-22T22:18:29.522585Z\",\"shell.execute_reply\":\"2022-08-22T22:18:29.531419Z\"}}\n# Select the most relevant features\nselectKBest = SelectKBest(score_func=chi2, k='all')\nselectKBest.fit(x_train, y_train)\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:19:16.080309Z\",\"iopub.execute_input\":\"2022-08-22T22:19:16.081251Z\",\"iopub.status.idle\":\"2022-08-22T22:19:16.087662Z\",\"shell.execute_reply.started\":\"2022-08-22T22:19:16.081218Z\",\"shell.execute_reply\":\"2022-08-22T22:19:16.086882Z\"}}\nx_train_kBest = selectKBest.transform(x_train)\nx_test_kBest = selectKBest.transform(x_test)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:21:20.207225Z\",\"iopub.execute_input\":\"2022-08-22T22:21:20.207613Z\",\"iopub.status.idle\":\"2022-08-22T22:21:20.213841Z\",\"shell.execute_reply.started\":\"2022-08-22T22:21:20.207584Z\",\"shell.execute_reply\":\"2022-08-22T22:21:20.212809Z\"}}\nfor i in range(len(selectKBest.scores_)):\n    print('Feature %d: %f '% (i, selectKBest.scores_[i]))\n\n# %% [markdown]\n# We can see that feature 1 may be considered insignificant out of all the features in our dataset. Let us train our models again on our new data with feature selection applied, to see if the performance of our models will change.\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:47:08.219647Z\",\"iopub.execute_input\":\"2022-08-22T22:47:08.220108Z\",\"iopub.status.idle\":\"2022-08-22T22:47:08.233046Z\",\"shell.execute_reply.started\":\"2022-08-22T22:47:08.220075Z\",\"shell.execute_reply\":\"2022-08-22T22:47:08.232264Z\"}}\n# Logistic Regression\nlogisticRegression = LogisticRegression()\nlogisticRegression.fit(x_train_kBest, y_train)\n\n# %% [markdown]\n# Let's now evaluate our logistic model built on data using feature selection method\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:42:06.462319Z\",\"iopub.execute_input\":\"2022-08-22T22:42:06.462768Z\",\"iopub.status.idle\":\"2022-08-22T22:42:06.468076Z\",\"shell.execute_reply.started\":\"2022-08-22T22:42:06.462734Z\",\"shell.execute_reply\":\"2022-08-22T22:42:06.467104Z\"}}\ny_predict_logistic = logisticRegression.predict(x_test_kBest)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:42:07.664854Z\",\"iopub.execute_input\":\"2022-08-22T22:42:07.665784Z\",\"iopub.status.idle\":\"2022-08-22T22:42:07.671098Z\",\"shell.execute_reply.started\":\"2022-08-22T22:42:07.665746Z\",\"shell.execute_reply\":\"2022-08-22T22:42:07.670238Z\"}}\naccuracy_logistic = accuracy_score(y_test, y_predict_logistic)\nprint('Logistic Regssion Accuracy With Feature Selection: ', accuracy_logistic)\n\n# %% [markdown]\n# There has been no change on the performance of our logistic regression model. It could be because dropping feature 1 may have been of no significance.\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:49:10.800148Z\",\"iopub.execute_input\":\"2022-08-22T22:49:10.801187Z\",\"iopub.status.idle\":\"2022-08-22T22:49:10.942629Z\",\"shell.execute_reply.started\":\"2022-08-22T22:49:10.801152Z\",\"shell.execute_reply\":\"2022-08-22T22:49:10.941750Z\"}}\n# RandomForestClassifier model\nrandomForest = RandomForestClassifier(criterion='gini', n_estimators=100, max_depth=2, random_state=33)\nrandomForest.fit(x_train_kBest, y_train)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:49:25.139350Z\",\"iopub.execute_input\":\"2022-08-22T22:49:25.139813Z\",\"iopub.status.idle\":\"2022-08-22T22:49:25.159458Z\",\"shell.execute_reply.started\":\"2022-08-22T22:49:25.139776Z\",\"shell.execute_reply\":\"2022-08-22T22:49:25.158382Z\"}}\ny_pred_random = randomForest.predict(x_test_kBest)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:50:13.331904Z\",\"iopub.execute_input\":\"2022-08-22T22:50:13.332325Z\",\"iopub.status.idle\":\"2022-08-22T22:50:13.340089Z\",\"shell.execute_reply.started\":\"2022-08-22T22:50:13.332286Z\",\"shell.execute_reply\":\"2022-08-22T22:50:13.339027Z\"}}\nprecisionScore_random = precision_score(y_test, y_pred_random, average='micro')\nprint('Precision score for RandomForestClassifier is ', precisionScore_random)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:51:21.010780Z\",\"iopub.execute_input\":\"2022-08-22T22:51:21.013023Z\",\"iopub.status.idle\":\"2022-08-22T22:51:21.023685Z\",\"shell.execute_reply.started\":\"2022-08-22T22:51:21.012981Z\",\"shell.execute_reply\":\"2022-08-22T22:51:21.022918Z\"}}\n# DecisionTreeClassifier model\ndecisionTree = DecisionTreeClassifier(criterion='gini', max_depth=1, random_state=33)\ndecisionTree.fit(x_train_kBest, y_train)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:51:57.338272Z\",\"iopub.execute_input\":\"2022-08-22T22:51:57.338647Z\",\"iopub.status.idle\":\"2022-08-22T22:51:57.343402Z\",\"shell.execute_reply.started\":\"2022-08-22T22:51:57.338617Z\",\"shell.execute_reply\":\"2022-08-22T22:51:57.342197Z\"}}\ny_pred_decision = decisionTree.predict(x_test_kBest)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2022-08-22T22:52:41.797749Z\",\"iopub.execute_input\":\"2022-08-22T22:52:41.798133Z\",\"iopub.status.idle\":\"2022-08-22T22:52:41.806855Z\",\"shell.execute_reply.started\":\"2022-08-22T22:52:41.798104Z\",\"shell.execute_reply\":\"2022-08-22T22:52:41.806059Z\"}}\nprecisionScore_decision = precision_score(y_test, y_pred_decision, average='micro')\nprint('Precision score for DecisionTreeClassifier is ', precisionScore_decision)\n\n# %% [markdown]\n# We can see that the performance of all 3 of our models did not change after applying feature selection i.e. The random forest classifier model still predicts only 56 percent of our positive classes correctly and the decision tree classifier still predicts 73 percent.\n#  This could be because the dropped feature was insignificant to our model, so dropping it made no difference.\n\n# %% [markdown]\n# Based on these results, we can see that the decision tree model performed better. ","metadata":{"_uuid":"b8b0f030-64bc-4fbc-a878-049dc26b74bf","_cell_guid":"29242a6f-403e-4a21-a506-677ae836ccfa","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2022-08-22T23:10:03.335274Z","iopub.execute_input":"2022-08-22T23:10:03.335687Z","iopub.status.idle":"2022-08-22T23:10:04.592026Z","shell.execute_reply.started":"2022-08-22T23:10:03.335657Z","shell.execute_reply":"2022-08-22T23:10:04.590917Z"},"trusted":true},"execution_count":146,"outputs":[]}]}